#include "predictor.h"
#include "tree_model.h"

using namespace xgboost;
using namespace std;

template<typename T>
void printVec( vector<T>& vec ) {
    cout << "[";
    for( int i = 0; i < vec.size(); i++ ) {
        if( i == vec.size()-1 )
            cout << vec[i] << "]";
        else
            cout << vec[i] << ",";
    }
    cout << endl;
}

int main() {
    //std::unique_ptr<dmlc::Stream> fi(dmlc::Stream::Create("data/0002.model", "r"));
    
    Predictor*  pred = new Predictor();
    pred->Load("data/test2.model");
    pred->DumpModel();
    cout << "predict test: " << std::endl;

	vector<unordered_map<size_t, float>>  inst1 = 
    {
        {{3,1},{10,1},{20,1},{21,1},{23,1},{34,1},{36,1},{39,1},{41,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{116,1},{120,1}},
        {{1,1},{10,1},{19,1},{21,1},{24,1},{34,1},{36,1},{39,1},{42,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{116,1},{122,1}},
        {{3,1},{9,1},{19,1},{21,1},{30,1},{34,1},{36,1},{40,1},{42,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{105,1},{117,1},{124,1}},
        {{3,1},{10,1},{14,1},{22,1},{29,1},{34,1},{37,1},{39,1},{41,1},{54,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{98,1},{106,1},{114,1},{120,1}},
        {{3,1},{9,1},{20,1},{21,1},{23,1},{34,1},{36,1},{39,1},{42,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{105,1},{116,1},{120,1}}
    };
    
    // {
    //     {{2,1},{9,1},{10,1},{20,1},{29,1},{33,1},{35,1},{39,1},{40,1},{52,1},{57,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{104,1},{116,1},{123,1}},
    //     {{2,1},{9,1},{19,1},{20,1},{22,1},{33,1},{35,1},{38,1},{40,1},{52,1},{55,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{105,1},{115,1},{119,1}},
    //     {{0,1},{9,1},{18,1},{20,1},{23,1},{33,1},{35,1},{38,1},{41,1},{52,1},{55,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{105,1},{115,1},{121,1}},
    //     {{2,1},{8,1},{18,1},{20,1},{29,1},{33,1},{35,1},{39,1},{41,1},{52,1},{57,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{104,1},{116,1},{123,1}},
    //     {{2,1},{9,1},{13,1},{21,1},{28,1},{33,1},{36,1},{38,1},{40,1},{53,1},{57,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{97,1},{105,1},{113,1},{119,1}}
    // };
    
  
    // {
    //     {{3,1},{10,1},{11,1},{21,1},{30,1},{34,1},{36,1},{40,1},{41,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{105,1},{117,1},{124,1}},
    //     {{3,1},{10,1},{20,1},{21,1},{23,1},{34,1},{36,1},{39,1},{41,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{116,1},{120,1}},
    //     {{1,1},{10,1},{19,1},{21,1},{24,1},{34,1},{36,1},{39,1},{42,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{116,1},{122,1}},
    //     {{3,1},{9,1},{19,1},{21,1},{30,1},{34,1},{36,1},{40,1},{42,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{105,1},{117,1},{124,1}},
    //     {{3,1},{10,1},{14,1},{22,1},{29,1},{34,1},{37,1},{39,1},{41,1},{54,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{98,1},{106,1},{114,1},{120,1}}
    // };
   
    vector<unordered_map<size_t, float>> inst2 =
    {
        {{3,1},{9,1},{19,1},{21,1},{30,1},{34,1},{36,1},{40,1},{41,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{118,1},{124,1}},
        {{1,1},{9,1},{20,1},{21,1},{24,1},{34,1},{36,1},{39,1},{41,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{117,1},{122,1}},
        {{3,1},{9,1},{19,1},{21,1},{24,1},{34,1},{36,1},{39,1},{51,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{116,1},{122,1}},
        {{4,1},{7,1},{11,1},{22,1},{29,1},{34,1},{36,1},{40,1},{41,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{105,1},{119,1},{124,1}},
        {{3,1},{10,1},{20,1},{21,1},{23,1},{34,1},{37,1},{40,1},{42,1},{54,1},{55,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{118,1},{126,1}}
    };
    // {
    //     {{0,1},{8,1},{18,1},{20,1},{23,1},{33,1},{35,1},{38,1},{41,1},{52,1},{55,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{105,1},{116,1},{121,1}},
    //     {{2,1},{8,1},{18,1},{20,1},{29,1},{33,1},{35,1},{39,1},{40,1},{52,1},{57,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{105,1},{117,1},{123,1}},
    //     {{0,1},{8,1},{19,1},{20,1},{23,1},{33,1},{35,1},{38,1},{40,1},{52,1},{55,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{105,1},{116,1},{121,1}},
    //     {{2,1},{8,1},{18,1},{20,1},{23,1},{33,1},{35,1},{38,1},{50,1},{52,1},{55,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{105,1},{115,1},{121,1}},
    //     {{3,1},{6,1},{10,1},{21,1},{28,1},{33,1},{35,1},{39,1},{40,1},{52,1},{57,1},{64,1},{68,1},{76,1},{85,1},{87,1},{91,1},{94,1},{101,1},{104,1},{118,1},{123,1}}
    // };
    // {
    //     {{1,1},{9,1},{19,1},{21,1},{24,1},{34,1},{36,1},{39,1},{42,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{117,1},{122,1}},
    //     {{3,1},{9,1},{19,1},{21,1},{30,1},{34,1},{36,1},{40,1},{41,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{118,1},{124,1}},
    //     {{1,1},{9,1},{20,1},{21,1},{24,1},{34,1},{36,1},{39,1},{41,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{117,1},{122,1}},
    //     {{3,1},{9,1},{19,1},{21,1},{24,1},{34,1},{36,1},{39,1},{51,1},{53,1},{56,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{106,1},{116,1},{122,1}},
    //     {{4,1},{7,1},{11,1},{22,1},{29,1},{34,1},{36,1},{40,1},{41,1},{53,1},{58,1},{65,1},{69,1},{77,1},{86,1},{88,1},{92,1},{95,1},{102,1},{105,1},{119,1},{124,1}}
    // };

    for( int i=0; i<inst1.size(); i++ ) {
        vector<int> onehot_i;
        pred->Transform(&inst1[i], onehot_i, 0, true);
        cout << "pred_trans1#" << i << " : ";
        printVec(onehot_i);
    }

    for( int i=0; i<inst2.size(); i++ ) {
        float pred_i = pred->Predict(&inst2[i], false, 0);
        cout << "pred_value2#" << i << " : " << pred_i << endl;
    }
    
    delete pred;

    return 0;
}
